{"version":3,"sources":["redux/actions/action-types.js","redux/actions/shipment-actions.js","redux/actions/user-actions.js","components/Header.js","components/stylus.js","components/list-overview/OverviewItem.js","components/list-overview/Overview.js","components/manager/shipment/ShipmentItem.js","components/biker/order/OrderDateField.js","components/biker/order/OrderItem.js","components/list-table/Table.js","components/manager/dashboard/Dashboard.js","components/biker/todolist/TodoList.js","components/auth/PrivateRoute.js","components/auth/Login.js","components/App.js","redux/reducers/index.js","redux/reducers/shipment-reducer.js","redux/reducers/user-reducer.js","redux/reducers/token-reducer.js","redux/reducers/filter-reducer.js","redux/store.js","index.js"],"names":["BASE_API_URL","fetchShipments","dispatch","axs","axios","create","defaults","baseURL","headers","post","common","localStorage","getItem","get","then","response","type","payload","data","catch","error","console","log","updateShipment","shipment","updatedShipment","updateAllShipments","shipments","formatDate","date","dt","Date","getDate","getMonth","getFullYear","getHours","getMinutes","saveToken","tkn","removeItem","setItem","isLoggedIn","result","status","user","usr","JSON","parse","atob","split","undefined","role","Hdr","styled","header","props","Profile","div","LogoutBtn","button","Header","timeout","onLogout","window","confirm","history","push","state","serverMsg","socket","socketIOclient","emit","username","uname","on","updated","assignee","id","setState","msg","shps","clearTimeout","setTimeout","this","token","onClick","Component","connect","withRouter","PageTitle","h2","OverviewWrapper","OverviewItemStyle","primaryColor","secondaryColor","TableStyle","OrderDateFieldStyle","BikersList","ul","AssignmentStyle","filterTable","title","item","nbr","Overview","items","map","ovv","i","key","bikers","origin","destination","pickup","delivery","assignShipment","biker","ev","indx","requestBikers","className","OrderDateField","useState","editMode","setEditMode","deleteBtn","setDeleteBtn","day","setDay","month","setMonth","year","setYear","hour","setHour","minute","setMinute","months","order","edit","cancel","save","newDate","alert","sendUpdate","remove","updatedOrder","onDateChange","target","value","dateval","d","m","y","h","mn","length","crossbrowserDateInputSelectOptions","onChange","content","proptypes","PropTypes","array","isRequired","func","string","OrderItem","Table","th","user_role","body","Dashboard","fetchBikers","updateAllBikers","summary","forEach","shp","table_body","filter","TodoList","filteredShipments","Fragment","component","rest","render","match","url","go","to","username_input","React","createRef","password_input","authError","setAuthError","Wrapper","LoginContent","Form","form","Title","h1","Input","input","ErrorMsg","Button","children","onSubmit","preventDefault","current","pwd","password","err","placeholder","ref","App","exact","path","combineReducers","action","middleware","thunk","store","createStore","allReducers","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6a27353.chunk.js","sourcesContent":["export const FETCH_SHIPMENTS = 'FETCH_SHP';\nexport const ASSIGN_SHIPMENT = 'ASSIGN_SHP';\nexport const FILTER_TABLE = 'FILTER_TABLE';\nexport const FETCH_ORDERS = 'UPDATE_RDR';\nexport const UPDATE_ORDER = 'UPDATE_RDR';\nexport const FETCH_BIKERS = 'FETCH_BKR';\nexport const UPDATE_BIKERS = 'UPDATE_BKR';\nexport const SAVE_TOKEN = 'SAVE_TOKEN';\nexport const BASE_URL = 'http://localhost:3001'\nexport const BASE_API_URL = 'http://localhost:3001/api'","import {FETCH_SHIPMENTS, ASSIGN_SHIPMENT, BASE_API_URL, UPDATE_ORDER, FILTER_TABLE} from './action-types'\nimport axios from 'axios';\n\n\nexport const fetchShipments = () => (dispatch) =>{\n    \n    let axs = axios.create();\n    axs.defaults.baseURL = BASE_API_URL;\n    axs.defaults.headers.post['Content-Type'] = 'application/json';\n\n    axs.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('token')}`;\n    return axs.get(`${BASE_API_URL}/shipments`)\n    .then(function (response) {\n        \n        dispatch({\n                type: FETCH_SHIPMENTS,\n                payload: response.data.data \n            })\n        })\n        .catch(function (error) {\n        \n        console.log(error);\n        })\n\n\n}\n\nexport const updateShipment = (shipment) => (dispatch) =>{\n    \n    let axs = axios.create();\n    axs.defaults.baseURL = BASE_API_URL;\n    axs.defaults.headers.post['Content-Type'] = 'application/json';\n\n    axs.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('token')}`;\n    return axs.post(`${BASE_API_URL}/update-shipment`, \n        {updatedShipment: shipment})\n        .then(function (response) {\n            dispatch({\n                    type: ASSIGN_SHIPMENT,\n                    payload: response.data.data\n                })\n        })\n        .catch(function (error) {\n            \n            console.log(error);\n        });\n    \n}\n\nexport const updateAllShipments = (shipments) =>({\n  \n        type: UPDATE_ORDER,\n        payload: shipments\n    })\n\nexport const filterTable = (title) =>({\n  \n    type: FILTER_TABLE,\n    payload: title\n\n})\n\n\nexport const formatDate = (date) =>{\n    let dt = new Date(date);\n    return `${dt.getDate()}/${+dt.getMonth()+1}/${dt.getFullYear()} ${dt.getHours()}:${dt.getMinutes()}` \n} \n    ","import {FETCH_BIKERS, UPDATE_BIKERS, BASE_API_URL, SAVE_TOKEN} from './action-types'\nimport axios from 'axios'\n\n\n\nexport const fetchBikers = () => (dispatch) => {\n  let axs = axios.create();\n  axs.defaults.baseURL = BASE_API_URL;\n  axs.defaults.headers.post['Content-Type'] = 'application/json';\n  axs.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('token')}`;\n    return axs.get(`${BASE_API_URL}/bikers`)\n    .then(function (response) {\n        dispatch({\n            type: FETCH_BIKERS,\n            payload: response.data.data\n        })\n      })\n      .catch(function (error) {\n        \n        console.log(error);\n      });\n    \n}\n\nexport const updateAllBikers = (bikers) =>({\n\n      type: UPDATE_BIKERS,\n      payload: bikers\n  })\n\n\nexport const saveToken = tkn => (dispatch) => {\n  tkn === '' ?  localStorage.removeItem('token') :localStorage.setItem('token', tkn)\n  dispatch({\n    type: SAVE_TOKEN,\n    payload: tkn\n  })\n}\n\nexport const isLoggedIn = () => {\n  let tkn = localStorage.getItem('token');\n  let result = {status: false, user: {}}\n  \n  if(tkn !== null){\n    let data = JSON.parse(atob(tkn.split('.')[1]));\n    let usr = data.user;\n    \n    if(usr.role !== undefined){\n      result.status = true;\n      result.user = usr;\n      \n    }\n  }\n  return result;\n}\n\n\n","import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport socketIOclient from 'socket.io-client'\nimport { BASE_URL } from '../redux/actions/action-types';\nimport { updateAllShipments } from '../redux/actions/shipment-actions'\nimport { saveToken, isLoggedIn } from '../redux/actions/user-actions'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Hdr = styled.header`\n    padding: 5px;\n    background-color: #325ff8;\n    text-align: center;\n    color: #fff;\n    ${props => props.status && \n        'position: fixed; width: 100%;top: 0;'\n    }\n\n    h1 {\n        font-weight: 400;\n        margin-bottom: 0;\n        margin-top: 5px;\n    }\n\n    p {\n        min-height: 20px;\n        margin: 0;\n    }\n    @media (max-width: 425px) {\n        h1 {\n            font-size: 1.8rem;\n            text-align:left;\n        }\n    }\n\n`\nconst Profile = styled.div`\n    float: right;\n    color: #fff;\n    text-align: right;\n    position: absolute;\n    top: 10px;\n    right: 20px;\n    font-size: 0.9em;\n`\n\nconst LogoutBtn = styled.button`\n    border: none;\n    background-color: rgba(0,0,0,0);\n    padding: 3px 10px;\n    cursor: pointer;\n    color: #fff;\n    border-bottom: 1px solid #fff;\n    :hover {\n        color: #f00;\n        border-bottom: 1px solid #f00;\n    }\n`\n\nclass Header extends Component {\n\n    timeout = null;\n    constructor(){\n        super();\n        \n        this.state = {\n          serverMsg: ''\n        }\n        \n      }\n    \n    componentDidMount(){\n        \n        const {status, user} = isLoggedIn();\n        if(status){\n        \n            let socket = socketIOclient(BASE_URL)\n            socket.emit(\"connct\", {username: user.uname});\n            socket.on(\"updated\", data=>{\n                console.log('RECEIVED:',data)\n\n                //update local state if the current user is concerned about the new updated item\n                if(user.role === 'Manager'|| data.updated.assignee.id === user.id){\n\n                    this.setState({serverMsg: data.msg});\n                    this.props.updateAllShipments(data.shps);\n                    \n                    if(this.timeout !== null) clearTimeout(this.timeout);\n                    \n                    this.timeout = setTimeout(()=>{\n                        this.setState({serverMsg: ''});\n                    }, 5000);\n                }\n            });\n        \n        }\n        \n    }\n\n    onLogout = () => {\n        if(window.confirm('Leave this session ?')){\n            \n            this.props.saveToken('');\n            this.props.history.push('/');\n        }\n    }\n\n    render(){\n        const {status, user} = isLoggedIn();\n        return (\n            <Hdr status={status}>\n                <h1>Delivery App</h1>\n                {\n                    (this.props.token || status) &&  \n                    <Profile>\n                        <p>{user.uname} ({user.role})</p>\n                        <LogoutBtn onClick={this.onLogout}>Logout</LogoutBtn>\n                    </Profile>\n                }\n                <p >{this.state.serverMsg}</p>\n            </Hdr>\n            \n        )\n    }\n}\nconst mapStateToProps = state => ({\n    token: state.token\n})\n\nHeader.propTypes = {\n    updateAllShipments: PropTypes.func.isRequired,\n    saveToken: PropTypes.func.isRequired,\n    token: PropTypes.string,\n\n}\n\nexport default connect(mapStateToProps, {updateAllShipments, saveToken})(withRouter(Header));\n\nexport {Header};","import styled from 'styled-components'\n\nexport const PageTitle = styled.h2`\n    text-align: center;\n    font-weight: 400;\n    margin-top: 100px;\n`\n\n/**************OVERVIEW**** */\nexport const OverviewWrapper = styled.div`\n    display: flex;\n    flex-flow: wrap;\n    justify-content: center;\n`\n\nexport const OverviewItemStyle = styled.div`\n    text-align: center;\n    margin: 10px;\n    color: #fff;\n    cursor: pointer;\n    box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\n     0 2px 2px 0 rgba(0,0,0,.14),\n      0 1px 5px 0 rgba(0,0,0,.12);\n    *{\n        margin: 0;\n        padding: 16px;\n    }\n    :hover{\n        color: #00f;\n    }\n    h4 {\n        background-color: ${props => props.primaryColor || '#aaa'};\n        border-top-left-radius: 3px;\n        border-top-right-radius: 3px;\n    }\n\n    p {\n        background-color: ${props => props.secondaryColor || '#da5'};\n        border-bottom-left-radius: 3px;\n        border-bottom-right-radius: 3px;\n    }\n\n`\n\n\n/**************END OF OVERVIEW**** */\n\n\nexport const TableStyle = styled.div`\n    justify-content: center;\n    overflow-x: scroll;\n    table {\n        margin: 20px auto;\n        border-spacing: 0px;\n        padding: 10px;\n    }\n    table th, table td {\n        border-bottom: 1px solid #aaa;\n        padding: 8px 5px;\n    }\n    \n    table th{\n        background-color: #ddd;\n        padding-top: 10px;\n    }\n\n    table tr:hover{\n        background-color: #eee;\n    } \n`\n\nexport const OrderDateFieldStyle= styled.div`\n    button {\n        border: none;\n        border-radius: 4px;\n        color: #fff;\n        float: right;\n        padding: 2px 10px;\n        cursor: pointer;\n    }\n\n    .add {\n        background-color: #325ff8;\n    }\n\n    .rm {\n        background-color: #ef0049;\n    }\n\n    .cnc {\n        background-color: #555;\n        margin-left: 10px;\n    }\n\n    .save, button.edt {\n        background-color: #00b450;\n        margin-left: 10px;\n    }\n\n    select {\n        background-color: #eee;\n        padding: 3px;\n        border: none;\n        margin-bottom: 10px;\n    }\n\n    div {\n        display: flex;\n        justify-content: center;\n        border-radius: 3px;\n    }\n`\n\nexport const BikersList = styled.ul`\n    position: absolute;\n    top: 100%;\n    padding: 0;\n    margin: 2px 0 0 0;\n    background-color: #f9f9f9;\n    min-width: 160px;\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n    z-index: 1;  \n    list-style-type: none;\n    display: none;\n\n    li {\n        float: none;\n        padding: 5px 10px;\n        text-decoration: none;\n        display: block;\n        text-align: left;\n        color: #000;\n        font-size: 0.9rem;\n        cursor: pointer;\n    }\n\n    li:hover {\n        background-color: #0f0fff;\n        color: #fff;\n    \n    }\n`\n\nexport const AssignmentStyle = styled.div`\n    display: inline-block;\n    position: relative;\n    :hover ${BikersList}{\n        display: block;\n    }\n\n    button {\n        display: inline-block;\n        font-family: inherit; \n        color: #fff;\n        background-color: #0f0fff;\n        border: none;\n        padding: 5px 15px;\n        border-radius: 4px;\n        cursor: pointer;\n    }\n`\n","import React from 'react'\nimport {OverviewItemStyle} from '../stylus'\nimport { connect } from 'react-redux';\nimport {filterTable} from '../../redux/actions/shipment-actions'\nimport PropTypes from 'prop-types'\n\n function OverviewItem(props) {\n    const {title, nbr, primaryColor, secondaryColor} = props.item;\n\n    const onOverviewClicked = () =>{\n        props.filterTable(title);\n    }\n    return (\n        <OverviewItemStyle onClick={onOverviewClicked}  \n            primaryColor={primaryColor} secondaryColor={secondaryColor}>\n            <h4>{title}</h4>\n            <p>{nbr}</p>\n        </OverviewItemStyle>\n    )\n}\n\nOverviewItem.propTypes = {\n    item: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        nbr: PropTypes.number.isRequired,\n        primaryColor: PropTypes.string.isRequired,\n        secondaryColor: PropTypes.string.isRequired,\n    })\n}\n\nexport default connect(null, {filterTable})(OverviewItem);\n\nexport {OverviewItem};","import React from 'react'\nimport {OverviewWrapper} from '../stylus'\nimport OverviewItem from './OverviewItem'\n\nexport default function Overview(props) {\n\n    return (\n        <OverviewWrapper>\n            {\n                 props.items.map((ovv, i)=>(\n                    <OverviewItem item={ovv} key={i}/>\n                ))\n            }\n\n        </OverviewWrapper>\n    )\n}\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {updateShipment, formatDate} from '../../../redux/actions/shipment-actions'\nimport {AssignmentStyle, BikersList} from '../../stylus'\nimport PropTypes from 'prop-types'\n\nfunction ShipmentItem(props) {\n\n    const {id, origin, destination, status, assignee, pickup, delivery} = props.shipment;\n\n    const assignShipment = (biker) => ev => {\n        \n        if(window.confirm(`Assign shipment: ${id} to ${biker.username} ?`)){\n            let updatedShipment = props.shipment;\n            updatedShipment.assignee = biker;\n            updatedShipment.status = 'ASSIGNED';\n            props.updateShipment(updatedShipment);\n        }\n    }\n    \n    return (\n        \n        <tr >\n            <td>{props.indx}</td>\n            <td>{id}</td>\n            <td >{origin}</td>\n            <td >{destination}</td>\n            <td >{status}</td>\n            <td >\n                {\n                    status === 'WAITING' ?\n                    <AssignmentStyle>\n                        <button onClick={props.requestBikers}>Assign to</button>\n                        <BikersList>\n                            {\n                                props.bikers.map(biker => (\n                                    <li key={biker.id} onClick={assignShipment(biker)}>{biker.username}</li>\n                                ))\n                            }\n                            \n                        </BikersList>\n                    </AssignmentStyle> :\n                    assignee.username\n\n                }\n                \n            </td>\n            <td  className=\"test-pickup\">{pickup !== null ? formatDate(pickup) : '[Not Set]'}</td>\n            <td  className=\"test-delivery\">{delivery !== null ? formatDate(delivery) : '[Not Set]'}</td>\n        </tr>\n    )\n}\n\n\nconst mapStateToProps = state => ({\n    bikers: state.bikers,\n    shipments: state.shipments\n}) \n\nShipmentItem.propTypes = {\n    bikers: PropTypes.array,\n    shipments: PropTypes.array,\n    updateShipment: PropTypes.func\n}\n\nexport default connect (mapStateToProps, {updateShipment})(ShipmentItem)\n\nexport {ShipmentItem};\n","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport {formatDate, updateShipment} from '../../../redux/actions/shipment-actions'\nimport {OrderDateFieldStyle} from '../../stylus'\nimport {PropTypes} from 'prop-types'\n\nconst OrderDateField = (props) =>{\n    const [editMode, setEditMode] = useState(false);\n    const [deleteBtn, setDeleteBtn] = useState(false);\n    const [day, setDay] = useState(1);\n    const [month, setMonth] = useState(0);\n    const [year, setYear] = useState(2019);\n    const [hour, setHour] = useState(0);\n    const [minute, setMinute] = useState(0);\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    \n    const {status} = props.order;\n    const {type, date} = props;\n\n    const edit = (date) => ev => {\n        \n        setDeleteBtn(date != null);\n        \n        date = date === undefined ? new Date() : new Date(date);\n        \n        setDay(date.getDate());\n        setMonth(date.getMonth());\n        setYear(date.getFullYear());\n        setHour(date.getHours());\n        setMinute(date.getMinutes());\n        \n        setEditMode(true);\n    }\n\n    const cancel = () => {\n        setEditMode(false);\n    }\n\n    const save = () => {\n        let newDate = new Date(`${year}-${month+1}-${day} ${hour}:${minute}`);\n        if(newDate > new Date()){\n            window.alert('Invalid Time! Please select current or any previous time.');\n            return;\n        }else if(type === 'delivery' && newDate < props.order.pickup){\n            window.alert('Invalid Time! Please select a Time after the PICKUP one.');\n            return;\n        }\n\n        sendUpdate(newDate);\n    }\n\n    const remove = () => {\n        \n        let msg = status === 'DELIVERED' && type === 'pick_up' ?\n            `Unset this PICK_UP TIME ? This operation will also \n            unset the DELIVERY TIME and change the order's STATUS`:\n            `Unset this time ? This operation will also change the order's STATUS.`;\n\n        if(window.confirm(msg)) sendUpdate(null);\n            \n    }\n\n    const sendUpdate = (date) =>{\n        let updatedOrder = props.order;\n\n        switch(type){\n            case 'pick_up':\n                updatedOrder.pickup = date;\n                if(date !== null){\n                    updatedOrder.status = updatedOrder.status === 'ASSIGNED' ? 'PICKED_UP' : updatedOrder.status;\n                }else {\n                    updatedOrder.status = 'ASSIGNED'\n                    updatedOrder.delivery = date;\n                }\n                break;\n                \n            case 'delivery':\n                \n                updatedOrder.delivery = date;\n                if(date !== null){\n                    updatedOrder.status = updatedOrder.status === 'PICKED_UP' ? 'DELIVERED' : updatedOrder.status;\n                }else{\n                    updatedOrder.status = 'PICKED_UP'\n                }\n                break;\n            default:\n                //        \n        }\n        props.updateShipment(updatedOrder);\n        setEditMode(false);\n    }\n\n    const onDateChange = (indx) => ev => {\n        switch(indx){\n            case 0:\n                setDay(+ev.target.value);\n                break;\n            case 1:\n                setMonth(+ev.target.value);\n                break;\n            case 2:\n                setYear(+ev.target.value);\n                break;\n            case 3:\n                setHour(+ev.target.value);\n                break;\n            case 4:\n                setMinute(+ev.target.value);\n                break;\n            default:\n\n        }\n    }\n\n\n    const crossbrowserDateInputSelectOptions = () =>{\n        let d = []; let m = []; let y = []; let h = []; let mn = [];\n        for(let i = 0; i < 60; i++){\n            if(d.length <= 31){\n                d.push(<option value={i+1} key={i}>{i+1}</option>);\n            }\n            \n            if(m.length < 12){\n                m.push(<option value={i} key={i}>{months[i]}</option>);\n            }\n            \n            if(y.length <= 5){\n                y.push(<option value={2019 + i} key={i}>{2019 + i}</option>);\n            }\n          \n            if(h.length <= 23){\n                h.push(<option value={i} key={i}>{i < 10 ? `0${i}`: i}</option>);\n            }\n            \n            mn.push(<option value={i} key={i}>{i < 10 ? `0${i}`: i}</option>);         \n        }\n\n        return {day: d, month: m, year: y, hour: h, minute: mn};\n    }\n    \n    const content = () => {\n        if(editMode){\n            let dateval = crossbrowserDateInputSelectOptions();\n            \n            return (\n                <OrderDateFieldStyle>\n                    <div >\n                        <select value={day} onChange={onDateChange(0)} className=\"dd\">{dateval.day}</select>\n                        <select value={month} onChange={onDateChange(1)} className=\"mm\">{dateval.month}</select>\n                        <select value={year} onChange={onDateChange(2)}  className=\"yy\">{dateval.year}</select>\n                    </div>\n                    <div >\n                        <select value={hour} onChange={onDateChange(3)} className=\"hh\">{dateval.hour}</select>\n                        {':'}\n                        <select value={minute} onChange={onDateChange(4)}  className=\"mn\">{dateval.minute}</select>\n                    </div>\n                    <div >\n                        {deleteBtn && <button className='rm' onClick={remove}>Delete</button>}\n                        <button className='cnc' onClick={cancel}>Cancel</button>\n                        <button className='save'onClick={save}>Save</button>  \n                    </div>\n                </OrderDateFieldStyle>\n            )\n        }else {\n            return (\n                <OrderDateFieldStyle>\n                    <span>{date !== null ? formatDate(date) : '[Not Set]'}</span>\n                    {type === 'pick_up' && \n                        (\n                            status === 'ASSIGNED' ?\n                            <button className='add ' onClick={edit()}>+</button> :\n                            <button className='edt ' onClick={edit(date)}>-</button>    \n                        )\n                    }\n                    {type === 'delivery' && \n                        (\n                            status === 'PICKED_UP' ?\n                            <button className='add' onClick={edit()}>+</button> :\n                            status === 'DELIVERED' ?\n                            <button className='edt' onClick={edit(date)}>-</button> :''\n                        )\n                    }  \n                </OrderDateFieldStyle>\n                )\n            \n        }\n\n    }\n\n    return content();\n    \n}\n\nOrderDateField.proptypes = {\n    shipments: PropTypes.array.isRequired,\n    updateShipment: PropTypes.func.isRequired,\n    type: PropTypes.string.isRequired,\n    date: PropTypes.date,\n    status: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n    shipments: state.shipments\n})\n\nexport default connect(mapStateToProps, {updateShipment})(OrderDateField);\n\nexport {OrderDateField};","import React from 'react'\nimport OrderDateField from './OrderDateField'\n\nexport default function OrderItem(props) {\n    const {id, origin, destination, pickup, delivery} = props.order;\n    return (\n        <tr >\n            <td>{props.indx}</td>\n            <td>{id}</td>\n            <td>{origin}</td>\n            <td>{destination}</td>\n            <td>\n                <OrderDateField order={props.order} date={pickup} type={'pick_up'}/>\n                \n            </td>\n            <td>\n            <OrderDateField order={props.order} date={delivery} type={'delivery'} />\n               \n            </td>\n        </tr>\n    )\n}\n","import React from 'react'\nimport {TableStyle} from '../stylus'\nimport ShipmentItem from '../manager/shipment/ShipmentItem'\nimport OrderItem from '../biker/order/OrderItem'\n\nexport default function Table(props) {\n    return (\n        <TableStyle>\n            <table>\n                <thead>\n                    <tr>\n                        {props.header.map((th, i) =>(\n                            <th key={i}>{th}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.user_role === 'Manager' ? \n                        props.body.map((item, i) =>(\n                            <ShipmentItem key={item.id} shipment={item} indx={i+1} />\n                        ))\n                        :\n                        props.body.map((item, i) =>(\n                            <OrderItem key={item.id} indx={i+1} order={item}/>\n                        ))\n                    }\n                    \n                </tbody>\n            </table>\n        </TableStyle>\n        \n    )\n}\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {fetchShipments, updateAllShipments} from '../../../redux/actions/shipment-actions'\nimport {fetchBikers, updateAllBikers, isLoggedIn} from '../../../redux/actions/user-actions'\nimport Overview from '../../list-overview/Overview'\nimport Header from '../../Header'\nimport {PageTitle} from '../../stylus'\nimport Table from '../../list-table/Table'\n\nclass Dashboard extends Component {\n\n    componentDidMount(){\n        this.props.fetchShipments();\n        this.props.fetchBikers();\n    }\n\n    componentWillUnmount(){\n        this.props.updateAllShipments([]);\n        this.props.updateAllBikers([]);\n    }\n    \n    render(){\n        const {user} = isLoggedIn();\n        const summary = [\n            {title: 'SHIPMENTS', nbr:this.props.shipments.length, primaryColor:'#607D8B', secondaryColor: '#78909C'},\n            {title: 'WAITING', nbr:0, primaryColor:'#673AB7', secondaryColor: '#7E57C2'},\n            {title: 'ASSIGNED', nbr:0, primaryColor:'#2196F3', secondaryColor: '#42A5F5'},\n            {title: 'PICKED_UP', nbr:0, primaryColor:'#009688', secondaryColor: '#26A69A'},\n            {title: 'DELIVERED', nbr:0, primaryColor:'#4CAF50', secondaryColor: '#66BB6A'},\n        ];\n    \n\n        this.props.shipments.forEach((shp, i)=>{\n            switch(shp.status){\n                case 'WAITING':\n                    summary[1].nbr++;\n                break;\n                \n                case 'ASSIGNED':\n                    summary[2].nbr++;\n                break;\n                \n                case 'PICKED_UP':\n                    summary[3].nbr++;\n                break;\n                \n                case 'DELIVERED':\n                    summary[4].nbr++;\n                break;\n    \n                default:\n                    summary[0].nbr = this.props.shipments.length; \n                    break;\n    \n            }\n            \n        })\n\n        const table_header = ['#', 'ID', 'Origin', 'Destination', 'Status', 'Assignee', 'Pick Up', 'Delivery'];\n        //Filter the list according to what has been clicked on the Overview list\n        //It Can be SHIPMENTS, WAITING,...\n        const table_body = this.props.filter === '' || this.props.filter === 'SHIPMENTS' ?\n                    this.props.shipments:\n                    this.props.shipments.filter(shp =>(shp.status === this.props.filter));\n    \n        return (\n            <>\n                <Header />\n                <PageTitle>Shipments Dashboard</PageTitle>\n                \n                <Overview items={summary}/>\n                \n                <Table body={table_body} header={table_header} user_role={user.role}/>\n                \n            </>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    fetchShipments: PropTypes.func.isRequired,\n    fetchBikers: PropTypes.func.isRequired,\n    updateAllShipments: PropTypes.func.isRequired,\n    updateAllBikers: PropTypes.func.isRequired,\n    shipments: PropTypes.array.isRequired,\n    filter: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n    shipments: state.shipments,\n    filter: state.filter\n})\n\nexport default connect(mapStateToProps, \n    {fetchShipments, fetchBikers, updateAllShipments, updateAllBikers}\n    )(Dashboard);\n\nexport {Dashboard};","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Overview from '../../list-overview/Overview'\nimport Header from '../../Header'\nimport {fetchShipments, updateAllShipments} from '../../../redux/actions/shipment-actions'\nimport { isLoggedIn } from '../../../redux/actions/user-actions'\nimport {PageTitle} from '../../stylus'\nimport Table from '../../list-table/Table'\n\nclass TodoList extends Component{\n\n    componentDidMount(){\n        this.props.fetchShipments();\n    }\n\n    componentWillUnmount(){\n        this.props.updateAllShipments([])\n    }\n\n    render(){\n        const {user} = isLoggedIn();\n        const filteredShipments = this.props.shipments.filter(shp =>(\n            (shp.status === 'ASSIGNED' || shp.status === 'PICKED_UP' || shp.status === 'DELIVERED')  \n            && shp.assignee.id === user.id\n        ))\n        const summary = [\n            {title: 'ORDERS', nbr:filteredShipments.length, primaryColor:'#673AB7', secondaryColor: '#7E57C2'},\n            {title: 'ASSIGNED', nbr:0, primaryColor:'#2196F3', secondaryColor: '#42A5F5'},\n            {title: 'PICKED_UP', nbr:0, primaryColor:'#009688', secondaryColor: '#26A69A'},\n            {title: 'DELIVERED', nbr:0, primaryColor:'#4CAF50', secondaryColor: '#66BB6A'},\n        ];\n    \n        filteredShipments.forEach((shp,i) => {\n            \n            switch(shp.status){\n                case 'ASSIGNED':\n                    summary[1].nbr++;\n                break;\n                \n                case 'PICKED_UP':\n                    summary[2].nbr++;\n                break;\n                \n                case 'DELIVERED':\n                    summary[3].nbr++;\n                break;\n                default:\n                    //\n                    break;\n    \n            }\n           \n        })\n        \n\n        const table_header = ['#', 'ID', 'Origin', 'Destination', 'Pick Up', 'Delivery'];\n        \n        //Filter the list according to what has been clicked on the Overview list\n        //It Can be ORDERS, ASSIGNED,...\n        const table_body = this.props.filter === '' || this.props.filter === 'ORDERS' ?\n                    filteredShipments:\n                    filteredShipments.filter(shp =>(shp.status === this.props.filter));\n    \n        return (\n            <React.Fragment>\n                <Header />\n                <PageTitle>Orders TodoList</PageTitle>\n                \n                <Overview items={summary}/>\n    \n                <Table body={table_body} user_role={user.role} header={table_header}/>\n                \n            </React.Fragment>\n        )\n        \n    }\n}\n\nTodoList.propTypes = {\n    fetchShipments: PropTypes.func.isRequired,\n    updateAllShipments: PropTypes.func.isRequired,\n    shipments: PropTypes.array.isRequired,\n    filter: PropTypes.string\n}\n\nconst mapStateToProps = state =>({\n        shipments: state.shipments,\n        filter: state.filter\n    }\n)\n\nexport default connect(mapStateToProps, {fetchShipments, updateAllShipments})(TodoList);\n\nexport {TodoList};","import React from 'react'\nimport {Route, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {saveToken, isLoggedIn} from '../../redux/actions/user-actions'\n\nfunction PrivateRoute({component: Component,...rest}) {\n\n    return (\n        <Route {...rest} render={(props)=>{\n            const {status, user} = isLoggedIn();\n            \n            if(status){\n                if((user.role === 'Biker' && props.match.url ==='/todo-list')\n                ||(user.role === 'Manager' && props.match.url ==='/dashboard')){\n                    return <Component {...props} />\n                }else {\n                    props.history.go(-1);\n                }\n                \n            }else return <Redirect to='/' />\n            \n        }}/>\n            \n    )\n}\n\nconst mapStateToProps = state =>({\n    token: state.token\n})\n\nexport default connect(mapStateToProps, {saveToken})(PrivateRoute);\n","import React, {useState} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { BASE_API_URL } from '../../redux/actions/action-types';\nimport {saveToken, isLoggedIn} from '../../redux/actions/user-actions'\nimport {connect} from 'react-redux'\n\n\nfunction Login(props) {\n\n    // const [uname, setUname] = useState('');\n    // const [pwd, setPwd] = useState('');\n    const username_input = React.createRef();\n    const password_input = React.createRef();\n\n    const [authError, setAuthError] = useState(null);\n    \n    const Wrapper = styled.div`\n        justify-content: center;\n        text-align: center;\n    `\n    const LoginContent = styled.div`\n        margin: 80px 10px;\n        width: auto;\n        text-align: -webkit-center;\n        background-color: #ddd;\n        border-radius: 5px;\n        display:inline-grid;\n        width: 80%;\n        @media (min-width: 768px) {\n            width: 50%;\n        }\n        @media (min-width: 1024px) {\n            width: 30%;\n        }\n\n    `\n    const Form = styled.form `\n        margin: 10px;\n    `\n\n    const Title = styled.h1`\n        text-align: center;\n        font-weight: 500;\n        padding: 10px;\n    `\n    const Input = styled.input`\n        background-color: #fff;\n        text-align: center;\n        padding: 10px;\n        margin-bottom: 10px;\n        border-radius: 3px;\n        border: 1px solid #fff;\n        width: 90%;\n    `\n    const ErrorMsg = styled.div `\n        background: rgba(255, 0, 0, 0.2);\n        color: #f00;\n        padding: 10px;\n        margin: 10px;\n        border-radius: 3px;\n    `\n\n    const Button = styled.button`\n        margin-top: 10px;\n        background-color: #325ff8;\n        border-radius: 3px;\n        border: 1px solid #fff;\n        width: 50%;\n        padding: 10px;\n        margin: 10px 10px 20px;\n        color: #fff;\n        cursor: pointer;\n        :hover {\n            background-color: #214eff;\n        }\n    `\n\n    const {status, user} = isLoggedIn();\n    if(status){\n        props.history.push(user.role === 'Manager' ? '/dashboard' : '/todo-list');\n    }\n\n    const submitLogin = ev => {\n        ev.preventDefault();\n        let uname = username_input.current.value;\n        let pwd = password_input.current.value;\n        if(uname === '' || pwd === ''){\n            setAuthError('Please fill up the form first.')\n            return;\n        }\n        axios.post(`${BASE_API_URL}/login`, {username: uname, password: pwd})\n            .then(function(response){\n                \n                const {data} = response;\n                \n                switch(data.status){\n                    case 'SUCCESS':\n                        //Ssaving the token to the store & localStorage\n                        props.saveToken(data.token);\n                        props.history.push(data.user.role === 'Manager' ? '/dashboard' : '/todo-list');\n                        \n                        break;\n                    case 'FAILURE':\n                        setAuthError(data.msg);\n                    break;\n\n                    default: \n                        //\n                }\n            })\n            .catch(function(err){\n                console.log(err);\n            })\n    }\n    \n    return (\n        <Wrapper>\n            <LoginContent>\n                {props.children}\n                <Title>Login</Title>\n                <Form onSubmit={submitLogin}>\n                    <Input type=\"text\" placeholder=\"Username\" ref={username_input}/>\n                    <Input type=\"password\" placeholder=\"Password\" ref={password_input}/>\n                    {authError && <ErrorMsg > {authError}</ErrorMsg>}\n                    <Button >Login</Button>\n                </Form>\n                \n            </LoginContent>\n        </Wrapper>\n    )\n}\n\nexport default connect(null, {saveToken})(withRouter(Login));","import React from 'react';\nimport Header from './Header'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Dashboard from './manager/dashboard/Dashboard'\nimport TodoList from './biker/todolist/TodoList'\nimport PrivateRoute from './auth/PrivateRoute';\nimport Login from './auth/Login';\n\nfunction App() {\n\n  return (\n    <Router>\n      <Route exact path=\"/\" render={()=>(\n          <Login>\n            <Header />\n          </Login>\n        )} />          \n        \n        <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\n        <PrivateRoute path=\"/todo-list\" component={TodoList}/>\n        \n    </Router>\n  );\n}\n\nexport default App;\n","import {combineReducers} from 'redux'\nimport {shipmentReducer} from './shipment-reducer'\nimport {tokenReducer} from './token-reducer'\nimport {userReducer} from './user-reducer'\nimport {filterReducer} from './filter-reducer'\n\nexport default combineReducers({\n    shipments: shipmentReducer,\n    bikers: userReducer,\n    token: tokenReducer,\n    filter: filterReducer\n})","import {FETCH_SHIPMENTS, ASSIGN_SHIPMENT, UPDATE_ORDER} from '../actions/action-types'\n\nexport const shipmentReducer = (state = [], action) => {\n    switch(action.type){\n        case FETCH_SHIPMENTS:\n        case ASSIGN_SHIPMENT:\n        case UPDATE_ORDER:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import {FETCH_BIKERS, UPDATE_BIKERS} from '../actions/action-types'\n\nexport const userReducer = (state = [], action)=>{\n    switch(action.type){\n        case FETCH_BIKERS:\n        case UPDATE_BIKERS:\n            return action.payload;\n        default:\n            return state;\n\n    }\n}","import {SAVE_TOKEN} from '../actions/action-types'\n\nexport function tokenReducer(state = '', action){\n    switch(action.type){\n        case SAVE_TOKEN:\n            return action.payload;\n        default: \n            return state;\n    }\n\n}","import {FILTER_TABLE} from '../actions/action-types'\n\nexport function filterReducer(state = '', action){\n    switch(action.type){\n        case FILTER_TABLE:\n            return action.payload;\n        default: \n            return state;\n    }\n\n}","import {createStore, applyMiddleware, compose} from 'redux'\nimport allReducers from './reducers'\nimport thunk from 'redux-thunk'\n\nconst initialState = {}\nconst middleware = [thunk]\nexport const store = createStore(\n        allReducers, initialState, \n        compose(applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        //\n        \n    )\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\n\nReactDOM.render(\n        <Provider store={store} >\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n"],"sourceRoot":""}